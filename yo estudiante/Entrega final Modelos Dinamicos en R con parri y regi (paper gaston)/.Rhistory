# guardamos los puntos (simulamos 200 períodos más)
for (i in 1:200) {
x <- eval(f)
data[i, n] <- x              # guardo en cada momento n
}
n <- n + 1                      # paso al período siguiente
}
data <- data[,1:2000]           # elimino el valor inicial
plot(R,data[1,], pch=".", xlab="", ylab="x",ylim=c(0,1))
title(xlab = "r", line=2.3, cex.lab=1)
for(i in 100:200) points(R,data[i,],pch=".")
n <- 1
R <- seq(2.5,4,length=2000)     # valores del parámetro de interés (renombramos "a" como "R")
f <- expression(a*x*(1-x))      # función a analizar
data <- matrix(0,200,2001)      # matriz de ceros, con nrow=200 y ncol=2001
set.seed(1234)
for(a in R) {
x <- runif(1)                 # condición inicial
## convergencia al atractor (aplico la logística 200 veces para llegar al atractor)
for (i in 1:200) {
x <- eval(f)                # le aplico la logística
}
# guardamos los puntos (simulamos 200 períodos más)
for (i in 1:200) {
x <- eval(f)
data[i, n] <- x              # guardo en cada momento n
}
n <- n + 1                      # paso al período siguiente
}
data <- data[,1:2000]           # elimino el valor inicial
plot(R,data[1,], pch=".", xlab="", ylab="x",ylim=c(0,1))
title(xlab = "r", line=2.3, cex.lab=1)
for(i in 100:200) points(R,data[i,],pch=".")
{
library(tidyverse)
}
# Parametros de ahorro
s_k = 0.25 # tasa de ahorro del capital fisico
s_h = 0.3 # tasa de ahorro del capital humano
# Parametros de eficiencia
delta = 0.05 # tasa de depreciacion
alpha = 0.40 # parametro de eficiencia de escala del capital fisico
beta = 0.4 # parametro de eficiencia de escala del capital humano
M = 500
R <- seq(0.01,3.5,length=50)
times = 1000
{
sensi = length(R)
data.L <- matrix(0, nrow = sensi, ncol = times)
data.L[,1] = rdunif(1,a = 1, b = 150) #tamaño inicial de la poblacion
data.n <- matrix(0, nrow = sensi, ncol = times)
data.n[,1] = 0.02 # crecimiento de la poblacion inicial (se podría poner
# una tasa de crecimiento aleatoria: runif(1,0.01,0.04))
data.k <- matrix(0, nrow = sensi, ncol = times)
data.k[,1] = 1
data.h <- matrix(0, nrow = sensi, ncol = times)
data.h[,1] = 1
data.y <- matrix(0, nrow = sensi, ncol = times)
data.y[,1] = 1
}
for (i in 1:sensi) {
for (t in 2:times) {
r= R[i] # en cada loop r toma un valor diferente del vector R
data.L[i,t] <- data.L[i,t-1]*exp(r*(1-(data.L[i,t-1]/M))) #Verhulst (1838)
data.n[i, t] <- (data.L[i, t] / data.L[i, t - 1]) - 1
data.k[i, t] <- (s_k * data.y[i, t - 1] + (1 - delta) * data.k[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de k
data.h[i, t] <- (s_h * data.y[i, t - 1] + (1 - delta) * data.h[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de h
data.y[i, t] <- data.k[i, t] ^ alpha * data.h[i, t] ^ beta
}}
(k.star = ((s_k^(1-beta)*s_h^(beta))/(delta))^(1/(1-alpha-beta)))
(h.star = ((s_h^(1-alpha)*s_k^(alpha))/(delta))^(1/(1-alpha-beta)))
for (i in c(1,30,50)) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
for (i in c(1,30,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(800, 600, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,30,50)) {
plot(data.h[i,], type = "l", pch = 20,xlab = "", ylab = "", col=alpha("black", 0.85))
title("Stock de capital humano", line = 1.2) #title
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="h", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) #sub
abline(h = h.star, col="red",lwd=1, lty = 2) # linea roja
text(50, 5000, "h* = 5400", font =4, cex.main =2, col= "red")
}
R[1]
R[30]
R[50]
n <- 1
R <- seq(2.5,4,length=2000)     # valores del parámetro de interés (renombramos "a" como "R")
f <- expression(a*x*(1-x))      # función a analizar
data <- matrix(0,200,2001)      # matriz de ceros, con nrow=200 y ncol=2001
set.seed(1234)
for(a in R) {
x <- runif(1)                 # condición inicial
## convergencia al atractor (aplico la logística 200 veces para llegar al atractor)
for (i in 1:200) {
x <- eval(f)                # le aplico la logística
}
# guardamos los puntos (simulamos 200 períodos más)
for (i in 1:200) {
x <- eval(f)
data[i, n] <- x              # guardo en cada momento n
}
n <- n + 1                      # paso al período siguiente
}
data <- data[,1:2000]           # elimino el valor inicial
plot(R,data[1,], pch=".", xlab="", ylab="x",ylim=c(0,1))
title(xlab = "r", line=2.3, cex.lab=1)
abline(v = 0.01,col="red",lwd=1, lty =2)
abline(v = 2.07551,col="red",lwd=1, lty =2)
abline(v = 3.5,col="red",lwd=1, lty =2)
for(i in 100:200) points(R,data[i,],pch=".")
n <- 1
R <- seq(2.5,4,length=2000)     # valores del parámetro de interés (renombramos "a" como "R")
f <- expression(a*x*(1-x))      # función a analizar
data <- matrix(0,200,2001)      # matriz de ceros, con nrow=200 y ncol=2001
set.seed(1234)
for(a in R) {
x <- runif(1)                 # condición inicial
## convergencia al atractor (aplico la logística 200 veces para llegar al atractor)
for (i in 1:200) {
x <- eval(f)                # le aplico la logística
}
# guardamos los puntos (simulamos 200 períodos más)
for (i in 1:200) {
x <- eval(f)
data[i, n] <- x              # guardo en cada momento n
}
n <- n + 1                      # paso al período siguiente
}
data <- data[,1:2000]           # elimino el valor inicial
plot(R,data[1,], pch=".", xlab="", ylab="x",ylim=c(0,1))
title(xlab = "r", line=2.3, cex.lab=1)
abline(v = 0.01,col="red",lwd=1, lty =2)
abline(v = 2.07551,col="red",lwd=1, lty =2)
abline(v = 3.5,col="red",lwd=1, lty =2)
for(i in 100:200) points(R,data[i,],pch=".")
R <- seq(0.01,4,length=50) #R <- seq(0.01,3.5,length=50)
{
library(tidyverse)
}
# Parametros de ahorro
s_k = 0.25 # tasa de ahorro del capital fisico
s_h = 0.3 # tasa de ahorro del capital humano
# Parametros de eficiencia
delta = 0.05 # tasa de depreciacion
alpha = 0.40 # parametro de eficiencia de escala del capital fisico
beta = 0.4 # parametro de eficiencia de escala del capital humano
M = 500
R <- seq(0.01,4,length=50) #R <- seq(0.01,3.5,length=50)
times = 1000
{
sensi = length(R)
data.L <- matrix(0, nrow = sensi, ncol = times)
data.L[,1] = rdunif(1,a = 1, b = 150) #tamaño inicial de la poblacion
data.n <- matrix(0, nrow = sensi, ncol = times)
data.n[,1] = 0.02 # crecimiento de la poblacion inicial (se podría poner
# una tasa de crecimiento aleatoria: runif(1,0.01,0.04))
data.k <- matrix(0, nrow = sensi, ncol = times)
data.k[,1] = 1
data.h <- matrix(0, nrow = sensi, ncol = times)
data.h[,1] = 1
data.y <- matrix(0, nrow = sensi, ncol = times)
data.y[,1] = 1
}
for (i in 1:sensi) {
for (t in 2:times) {
r= R[i] # en cada loop r toma un valor diferente del vector R
data.L[i,t] <- data.L[i,t-1]*exp(r*(1-(data.L[i,t-1]/M))) #Verhulst (1838)
data.n[i, t] <- (data.L[i, t] / data.L[i, t - 1]) - 1
data.k[i, t] <- (s_k * data.y[i, t - 1] + (1 - delta) * data.k[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de k
data.h[i, t] <- (s_h * data.y[i, t - 1] + (1 - delta) * data.h[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de h
data.y[i, t] <- data.k[i, t] ^ alpha * data.h[i, t] ^ beta
}}
{
library(tidyverse)
}
# Parametros de ahorro
s_k = 0.25 # tasa de ahorro del capital fisico
s_h = 0.3 # tasa de ahorro del capital humano
# Parametros de eficiencia
delta = 0.05 # tasa de depreciacion
alpha = 0.40 # parametro de eficiencia de escala del capital fisico
beta = 0.4 # parametro de eficiencia de escala del capital humano
M = 500
R <- seq(0.01,4,length=50) #R <- seq(0.01,3.5,length=50)
times = 1000
{
sensi = length(R)
data.L <- matrix(0, nrow = sensi, ncol = times)
data.L[,1] = rdunif(1,a = 1, b = 150) #tamaño inicial de la poblacion
data.n <- matrix(0, nrow = sensi, ncol = times)
data.n[,1] = 0.02 # crecimiento de la poblacion inicial (se podría poner
# una tasa de crecimiento aleatoria: runif(1,0.01,0.04))
data.k <- matrix(0, nrow = sensi, ncol = times)
data.k[,1] = 1
data.h <- matrix(0, nrow = sensi, ncol = times)
data.h[,1] = 1
data.y <- matrix(0, nrow = sensi, ncol = times)
data.y[,1] = 1
}
for (i in 1:sensi) {
for (t in 2:times) {
r= R[i] # en cada loop r toma un valor diferente del vector R
data.L[i,t] <- data.L[i,t-1]*exp(r*(1-(data.L[i,t-1]/M))) #Verhulst (1838)
data.n[i, t] <- (data.L[i, t] / data.L[i, t - 1]) - 1
data.k[i, t] <- (s_k * data.y[i, t - 1] + (1 - delta) * data.k[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de k
data.h[i, t] <- (s_h * data.y[i, t - 1] + (1 - delta) * data.h[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de h
data.y[i, t] <- data.k[i, t] ^ alpha * data.h[i, t] ^ beta
}}
(k.star = ((s_k^(1-beta)*s_h^(beta))/(delta))^(1/(1-alpha-beta)))
(h.star = ((s_h^(1-alpha)*s_k^(alpha))/(delta))^(1/(1-alpha-beta)))
for (i in c(1,30,50)) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
for (i in c(1,30,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(800, 600, "M = 500", font =4, cex.main =2, col= "red")
}
R[50]
R[1]
R[30]
R
R[26]
for (i in c(1,26,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(800, 600, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
for (i in c(1,26,50)) {
plot(data.h[i,], type = "l", pch = 20,xlab = "", ylab = "", col=alpha("black", 0.85))
title("Stock de capital humano", line = 1.2) #title
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="h", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) #sub
abline(h = h.star, col="red",lwd=1, lty = 2) # linea roja
text(50, 5000, "h* = 5400", font =4, cex.main =2, col= "red")
}
R[1]
R[26]
R[50]
for (i in c(1,26,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(800, 600, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(450, 600, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(800, 450, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(170, 450, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.h[i,], type = "l", pch = 20,xlab = "", ylab = "", col=alpha("black", 0.85))
title("Stock de capital humano", line = 1.2) #title
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="h", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) #sub
abline(h = h.star, col="red",lwd=1, lty = 2) # linea roja
text(50, 5000, "h* = 5400", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.k[i,], type = "l", xlab = "", ylab = "", col=alpha("black", 0.85))
title("Stock de capital físico", line = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="k", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3)
abline(h = k.star, col="red",lwd=1, lty =2)
text(50, 4100, "k* = 4500", font =4, cex.main =2, col= "red")
}
{
library(tidyverse)
}
# Parametros de ahorro
s_k = 0.25 # tasa de ahorro del capital fisico
s_h = 0.3 # tasa de ahorro del capital humano
# Parametros de eficiencia
delta = 0.05 # tasa de depreciacion
alpha = 0.40 # parametro de eficiencia de escala del capital fisico
beta = 0.4 # parametro de eficiencia de escala del capital humano
M = 500
R <- seq(0.01,4,length=50) #R <- seq(0.01,3.5,length=50)
times = 1000
{
sensi = length(R)
data.L <- matrix(0, nrow = sensi, ncol = times)
data.L[,1] = rdunif(1,a = 1, b = 150) #tamaño inicial de la poblacion
data.n <- matrix(0, nrow = sensi, ncol = times)
data.n[,1] = 0.02 # crecimiento de la poblacion inicial (se podría poner
# una tasa de crecimiento aleatoria: runif(1,0.01,0.04))
data.k <- matrix(0, nrow = sensi, ncol = times)
data.k[,1] = 1
data.h <- matrix(0, nrow = sensi, ncol = times)
data.h[,1] = 1
data.y <- matrix(0, nrow = sensi, ncol = times)
data.y[,1] = 1
}
for (i in 1:sensi) {
for (t in 2:times) {
r= R[i] # en cada loop r toma un valor diferente del vector R
data.L[i,t] <- data.L[i,t-1]*exp(r*(1-(data.L[i,t-1]/M))) #Verhulst (1838)
data.n[i, t] <- (data.L[i, t] / data.L[i, t - 1]) - 1
data.k[i, t] <- (s_k * data.y[i, t - 1] + (1 - delta) * data.k[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de k
data.h[i, t] <- (s_h * data.y[i, t - 1] + (1 - delta) * data.h[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de h
data.y[i, t] <- data.k[i, t] ^ alpha * data.h[i, t] ^ beta
}}
(k.star = ((s_k^(1-beta)*s_h^(beta))/(delta))^(1/(1-alpha-beta)))
(h.star = ((s_h^(1-alpha)*s_k^(alpha))/(delta))^(1/(1-alpha-beta)))
for (i in c(1,26,50)) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
for (i in c(1,26,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(170, 450, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.h[i,], type = "l", pch = 20,xlab = "", ylab = "", col=alpha("black", 0.85))
title("Stock de capital humano", line = 1.2) #title
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="h", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) #sub
abline(h = h.star, col="red",lwd=1, lty = 2) # linea roja
text(50, 5000, "h* = 5400", font =4, cex.main =2, col= "red")
}
R
for (i in c(1,13,14,50)) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
for (i in 1:50) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
for (i in c(1,26,50)) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
R[26]
{
library(tidyverse)
}
# Parametros de ahorro
s_k = 0.25 # tasa de ahorro del capital fisico
s_h = 0.3 # tasa de ahorro del capital humano
# Parametros de eficiencia
delta = 0.05 # tasa de depreciacion
alpha = 0.40 # parametro de eficiencia de escala del capital fisico
beta = 0.4 # parametro de eficiencia de escala del capital humano
M = 500
R <- seq(0.01,4,length=50) #R <- seq(0.01,3.5,length=50)
times = 1000
{
sensi = length(R)
data.L <- matrix(0, nrow = sensi, ncol = times)
data.L[,1] = rdunif(1,a = 1, b = 150) #tamaño inicial de la poblacion
data.n <- matrix(0, nrow = sensi, ncol = times)
data.n[,1] = 0.02 # crecimiento de la poblacion inicial (se podría poner
# una tasa de crecimiento aleatoria: runif(1,0.01,0.04))
data.k <- matrix(0, nrow = sensi, ncol = times)
data.k[,1] = 1
data.h <- matrix(0, nrow = sensi, ncol = times)
data.h[,1] = 1
data.y <- matrix(0, nrow = sensi, ncol = times)
data.y[,1] = 1
}
for (i in 1:sensi) {
for (t in 2:times) {
r= R[i] # en cada loop r toma un valor diferente del vector R
data.L[i,t] <- data.L[i,t-1]*exp(r*(1-(data.L[i,t-1]/M))) #Verhulst (1838)
data.n[i, t] <- (data.L[i, t] / data.L[i, t - 1]) - 1
data.k[i, t] <- (s_k * data.y[i, t - 1] + (1 - delta) * data.k[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de k
data.h[i, t] <- (s_h * data.y[i, t - 1] + (1 - delta) * data.h[i, t - 1]) /
(data.L[i, t] / data.L[i, t - 1]) #evolucion de h
data.y[i, t] <- data.k[i, t] ^ alpha * data.h[i, t] ^ beta
}}
(k.star = ((s_k^(1-beta)*s_h^(beta))/(delta))^(1/(1-alpha-beta)))
(h.star = ((s_h^(1-alpha)*s_k^(alpha))/(delta))^(1/(1-alpha-beta)))
for (i in c(1,26,50)) {
plot(data.n[i,],type = "p", pch = 20, xlab = "", ylab = "",
col=alpha("black", 0.7))
title("Tasa de crecimiento de la población", line = 1.2, cex.main = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="n", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h=0, lwd= 1, col= "red", lty = 1) # linea roja
}
for (i in c(1,26,50)) {
plot(data.L[i,], type = "p", pch = 20, xlab = "", ylab = "", col=alpha("black", 0.7))
title("Tamaño de la población", line = 1.2, cex.main = 1.2) #titulo
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="L", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) # sub
abline(h = M, col="red",lwd=1, lty = 2) # linea roja
text(170, 450, "M = 500", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.h[i,], type = "l", pch = 20,xlab = "", ylab = "", col=alpha("black", 0.85))
title("Stock de capital humano", line = 1.2) #title
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="h", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3) #sub
abline(h = h.star, col="red",lwd=1, lty = 2) # linea roja
text(50, 5000, "h* = 5400", font =4, cex.main =2, col= "red")
}
for (i in c(1,26,50)) {
plot(data.k[i,], type = "l", xlab = "", ylab = "", col=alpha("black", 0.85))
title("Stock de capital físico", line = 1.2)
title(xlab="t", line=2.3, cex.lab=1) # xlab
title(ylab="k", line=2.3, cex.lab=1) # ylab
mtext("Verhulst", side = 3, font = 3)
abline(h = k.star, col="red",lwd=1, lty =2)
text(50, 4100, "k* = 4500", font =4, cex.main =2, col= "red")
}
View(data.L)
